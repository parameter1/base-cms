import { getAsArray, get } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import getContentPreview from "@parameter1/base-cms-marko-web-theme-monorail/utils/get-content-preview";

$ const { id, type, pageNode } = data;
$ const { recaptcha, identityX } = out.global;

<marko-web-content-page-layout id=id type=type>
  <@page>
    <marko-web-resolve-page|{ data: content, resolved }| node=pageNode>
      <theme-website-section-breadcrumbs section=content.primarySection />
      <marko-web-content-name obj=content tag="h1" />
      <marko-web-content-teaser obj=content class="lead" />

      <marko-web-social-sharing
        path=content.siteContext.path
        providers=["print", "facebook", "linkedin", "twitter", "pinterest"]
        print-path=`/print/content/${content.id}`
        ssr=true
      />

      <div class="content-page-body">
        <primary-media content=content />
      </div>

      <div class="row mt-3">
        <div class="col-md-8">
          <div class="content-page-body">
            <marko-web-p1-events-track-content-scroll-depth
              content=content
              selector=".document-container .page .row .content-page-body"
            />
            <theme-page-contents|{ blockName }| attrs={ "data-gallery-id": id }>
              $ const requiresRegistration = get(content, "userRegistration.isCurrentlyRequired");
              $ const progressiveRegEnabled = identityX ?  identityX.config.getProgresiveQuestions().length !== 0 : false;
              $ const checkReg = requiresRegistration || progressiveRegEnabled;
              <marko-web-identity-x-access|context| enabled=checkReg>
                <!-- If ProgressiveReg is enabled & required: Fire it first & ignore required user fields!  -->
                <if(progressiveRegEnabled)>
                  $ const body = getContentPreview({ body: content.body, selector: "p:nth-of-type(1)" });
                  <marko-web-content-body block-name=blockName obj={ body } />
                  <div class="content-page-preview-overlay" />
                  <theme-content-page-gate
                    profile-confirmation=false
                    can-access=context.canAccess
                    is-logged-in=context.isLoggedIn
                    has-required-access-level=context.hasRequiredAccessLevel
                    requires-access-level=context.requiresAccessLevel
                    requires-user-input=false
                    requiresPUI=context.requiresPUI
                    messages=context.messages
                    content-gate-type="default"
                  />
                </if>
                <else-if(!context.canAccess || (context.requiresUserInput && requiresRegistration))>
                  $ const body = getContentPreview({ body: content.body, selector: "p:nth-of-type(1)" });
                  <marko-web-content-body block-name=blockName obj={ body } />
                  <div class="content-page-preview-overlay" />
                  <theme-content-page-gate
                    profile-confirmation=false
                    can-access=context.canAccess
                    is-logged-in=context.isLoggedIn
                    has-required-access-level=context.hasRequiredAccessLevel
                    requires-access-level=context.requiresAccessLevel
                    requires-user-input=context.requiresUserInput
                    requiresPUI=context.requiresPUI
                    messages=context.messages
                    content-gate-type="default"
                  />
                </else-if>
                <else>
                  <content-body
                    content=content
                    block-name=blockName
                    display-read-next=false
                    display-comments=false
                  />
                </else>
              </marko-web-identity-x-access>
            </theme-page-contents>
          </div>
        </div>
        <div class="col-md-4">
          <theme-read-next-block
            content-id=content.id
            section-id=content.primarySection.id
            published=content.published
          />
          <if(["company","product"].includes(content.type))>
            <rmi-form content=content />
          </if>
          <leaders-context content-id=content.id />
        </div>
      </div>

    </marko-web-resolve-page>

  </@page>
</marko-web-content-page-layout>
