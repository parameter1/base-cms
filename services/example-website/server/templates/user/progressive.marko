import { getAsObject } from "@parameter1/base-cms-object-path";
$ const { config, res } = out.global;
$ const { identityX } = res.locals;

$ const type = "profile";
$ const title = "Progressive Profile";
$ const description = `Tell ${config.siteName()} a little more about your self`;

$ const now = new Date().getTime();
$ const hours = identityX.config.getProgresiveDelay();
$ const delay = hours * 60 * 60 * 1000;

$ const setDisplayNext = user => identityX.setAppUserCustomAttributes({
  userId: user.id,
  attributes: { progressiveSeenAt:  now },
});

$ const questions = identityX.config.getProgresiveQuestions();
$ const qIds = questions.map(({id}) => id);

<marko-web-default-page-layout type=type title=title description=description>
  <@page>
    <marko-web-page-wrapper>
      <@section>
        <h1 class="page-wrapper__title">${description}</h1>
        <marko-web-identity-x-context|{ user, hasUser }|>
          <if(user)>
            $ const customAttributes = getAsObject(user, 'customAttributes');
            $ const { profileLastUpdated } = customAttributes;
            $ const canAsk = profileLastUpdated ? profileLastUpdated < (now - delay) : true;
            <if(canAsk)>
              <marko-web-identity-x-form-progressive
                additional-event-data={
                  action: "progressiveReg",
                }
              />
            </if>
            <else>
              $ const waitInMilliSeconds =  profileLastUpdated - (now - delay);
              $ const date = new Date(waitInMilliSeconds);
              $ const waitInMin = `${date.getMinutes()}:${date.getSeconds()}`;
              $ const customAttributes = { ...user.customAttributes, waitInMilliSeconds, waitInMin };
              <pre class="my-3 border p-3">${JSON.stringify({ id: user.id, customAttributes }, null, 2)}</pre>
            </else>
          </if>
        </marko-web-identity-x-context>
      </@section>
    </marko-web-page-wrapper>
  </@page>
</marko-web-default-page-layout>
