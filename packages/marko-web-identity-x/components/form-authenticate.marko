import { get } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";

$ const { req } = out.global;
$ const { identityX, query } = req;
$ const source = get(query, 'source');
$ const isEnabled = Boolean(req.identityX);
$ const additionalEventData = defaultValue(input.additionalEventData, {});

<if(isEnabled)>
  <marko-web-identity-x-context|{ application }|>
    $ const props = {
      additionalEventData: { ...additionalEventData, source },
      eventLabel: input.eventLabel,
      token: query.token,
      redirectTo: query.redirectTo,
      requiredServerFields: identityX.config.getRequiredServerFields(),
      requiredClientFields: identityX.config.getRequiredClientFields(),
      defaultCountryCode: identityX.config.get('defaultCountryCode'),
      hiddenFields: identityX.config.getHiddenFields(),
      endpoints: identityX.config.getEndpoints(),
      callToAction: input.callToAction,
      buttonLabel: input.buttonLabel,
      consentPolicy: get(application, "organization.consentPolicy"),
      emailConsentRequest: get(application, "organization.emailConsentRequest"),
      regionalConsentPolicies: get(application, "organization.regionalConsentPolicies"),
    };
    <marko-web-browser-component name="IdentityXAuthenticate" props=props />
  </marko-web-identity-x-context>
</if>
